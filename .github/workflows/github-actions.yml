name: GitHub Actions
on: [ push ]
jobs:
  build-and-test-job:
    runs-on: ubuntu-latest
    container: node:latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: sampledb
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_HOST: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Set up JDK 19
        uses: actions/setup-java@v1
        with:
          java-version: 19

      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          repository: JudeaDumont/java-ecosystem-project
          path: ./java-ecosystem-project

      - name: Update apt-get
        run: |
          apt-get -q update 1> /dev/null

      - name: Install PostgreSQL client
        run: |
          apt-get -q install --yes postgresql-client 1> /dev/null

      - name: Install Maven
        run: |
          apt-get -q install --yes maven 1> /dev/null

      - name: Migrate database, build project for flyway
        run: |
          cd java-ecosystem-project
          mvn -q flyway:baseline -s .github/workflows/maven-settings.xml --file webapi/pom.xml 1> /dev/null
          mvn -q flyway:migrate -s .github/workflows/maven-settings.xml --file webapi/pom.xml 1> /dev/null

      - name: Run tests with Maven
        run: |
          cd java-ecosystem-project/webapi
          mvn -q -B test

      - name: Checkout Angular
        uses: actions/checkout@v3
        with:
          repository: JudeaDumont/angular8-frontend
          path: ./angular

      - name: Install and Run Angular
        run: |
          cd angular
          yes | npm install -g @angular/cli
          yes | npm install -g @angular/core
          npm install --save-dev @angular-devkit/build-angular@15.0.0
          yes | npm install @angular/material@15.0.0
          ng update @angular/cli @angular/core @angular/material --allow-dirty

      - name: Checkout Selenium/Cucumber
        uses: actions/checkout@v3
        with:
          repository: JudeaDumont/SeleniumWithCucucumber
          path: ./SeleniumWithCucucumber

      - name: Build Selenium/Cucumber with Maven

        #fix for dbus included
        run: |
          apt-get -q install --yes xvfb
          apt-get -q install --yes dbus
          mkdir /run/dbus -p
          dbus-daemon --system

          apt-get -q install -y libappindicator1 fonts-liberation
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          dpkg -i google-chrome*.deb || true
          apt-get -q install --yes -f
          ln -sf /usr/bin/google-chrome-stable /usr/bin/google-chrome
          google-chrome --version

          google-chrome --headless --no-sandbox
          Xvfb :0 -ac -screen 0 1024x768x24 &

          cd java-ecosystem-project/webapi
          export JASYPT_ENCRYPTOR_PASSWORD=secretkey
          mvn spring-boot:run &
          cd ../../angular
          ng serve &
          cd ..

          cd SeleniumWithCucucumber
          mvn -q clean verify -Dtestng.dtd.http=true

      - uses: deblockt/cucumber-report-annotations-action@v1.7
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: "**/cucumber.json"

      - name: Deploy Selenium/Cucumber report page to GitHub Page
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/cucumber-report-html/cucumber-html-reports

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
