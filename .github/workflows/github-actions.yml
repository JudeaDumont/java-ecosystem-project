name: GitHub Actions
on: [ push ]
jobs:
  build-and-test-job:
    runs-on: ubuntu-latest
    container: node:latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{secrets.ACTIONS_POSTGRES_DB}}
          POSTGRES_PORT: ${{secrets.ACTIONS_POSTGRES_PORT}}
          POSTGRES_USER: ${{secrets.ACTIONS_POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.ACTIONS_POSTGRES_PASSWORD}}
          POSTGRES_HOST: ${{secrets.ACTIONS_POSTGRES_HOST}}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Update apt-get
        run: |
          apt-get -q update 1> /dev/null

      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          repository: JudeaDumont/java-ecosystem-project
          path: ./java-ecosystem-project

      - name: Install PostgreSQL client
        run: |
          apt-get -q install --yes postgresql-client 1> /dev/null

      - name: Install Maven
        run: |
          apt-get -q install --yes maven 1> /dev/null

      - name: Migrate database, build project for flyway
        run: |
          cd java-ecosystem-project
          mvn -q flyway:baseline -s .github/workflows/maven-settings.xml --file webapi/pom.xml 1> /dev/null
          mvn -q flyway:migrate -s .github/workflows/maven-settings.xml --file webapi/pom.xml 1> /dev/null

      - name: Run tests with Maven
        run: |
          cd java-ecosystem-project/webapi
          mvn -q -B test
        env:
          JASYPT_ENCRYPTOR_PASSWORD: "${{secrets.ACTIONS_JASYPT_ENCRYPTOR_PASSWORD}}" #required for yamlparser test

      - name: Checkout Angular
        uses: actions/checkout@v3
        with:
          repository: JudeaDumont/angular8-frontend
          path: ./angular

      - name: Install Angular
        run: |
          cd angular
          yes | npm install -g @angular/cli 1> /dev/null
          yes | npm install @angular/material@15.0.0 1> /dev/null
          ng update @angular/cli @angular/core @angular/material --allow-dirty 1> /dev/null

      - name: Checkout Selenium/Cucumber
        uses: actions/checkout@v3
        with:
          repository: JudeaDumont/SeleniumWithCucucumber
          path: ./SeleniumWithCucucumber

      - name: Install Chrome
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb 1> /dev/null
          dpkg -i google-chrome*.deb || true 1> /dev/null
          apt-get -q install --yes -f 1> /dev/null
          ln -sf /usr/bin/google-chrome-stable /usr/bin/google-chrome

      #change-incoming
      #Remember that these "runs" are organized into processes, when they end, so do their children
      - name: Run Spring Boot, Angular, and Selenium
        run: |
          cd java-ecosystem-project/webapi
          export JASYPT_ENCRYPTOR_PASSWORD=${{secrets.ACTIONS_JASYPT_ENCRYPTOR_PASSWORD}}
          mvn spring-boot:run &
          cd ../../angular
          ng serve &
          cd ../SeleniumWithCucucumber
          mvn -q clean verify -Dtestng.dtd.http=true
      - uses: deblockt/cucumber-report-annotations-action@v1.7
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: "**/cucumber.json"

      - name: Deploy Selenium/Cucumber report page to GitHub Page
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/cucumber-report-html/cucumber-html-reports

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
